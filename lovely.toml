
[manifest]
version = "0.0.0"
dump_lua = true
priority = 0







# Calculate when Wheel succeeds (for Three-Leaf Clover) (stolen from Cryptid)
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if self.ability.name == 'Ectoplasm' or self.ability.name == 'Hex' or pseudorandom('wheel_of_fortune') < G.GAME.probabilities.normal/self.ability.extra then
'''
position = "after"
payload = '''
if self.ability.name == 'The Wheel of Fortune' then self.sha_wheel_yup = true end
'''
match_indent = false

# For Feste to detect when a Lucky card hits and copy that exact outcome
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if pseudorandom('lucky_mult') < G.GAME.probabilities.normal/5 then"
position = "after"
payload = '''
self.sha_lucky_mult = true
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if pseudorandom('lucky_money') < G.GAME.probabilities.normal/15 then"
position = "after"
payload = '''
self.sha_lucky_money = true
'''
match_indent = false

# For Steel Joker to also count Gold Cards if Alchemist is present
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
for k, v in pairs(G.playing_cards) do
    if v.config.center == G.P_CENTERS.m_steel then self.ability.steel_tally = self.ability.steel_tally+1 end
end
'''
position = "at"
payload = '''
if next(find_joker("Alchemist")) then
    for k, v in pairs(G.playing_cards) do
        if v.config.center == G.P_CENTERS.m_steel or v.config.center == G.P_CENTERS.m_gold then self.ability.steel_tally = self.ability.steel_tally+1 end
    end
else
    for k, v in pairs(G.playing_cards) do
        if v.config.center == G.P_CENTERS.m_steel then self.ability.steel_tally = self.ability.steel_tally+1 end
    end
end
'''
match_indent = false

# For Golden Ticket to also count Steel Cards if Alchemist is present
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
context.other_card.ability.name == 'Gold Card' then
'''
position = "at"
payload = '''
context.other_card.ability.name == 'Gold Card' or (context.other_card.ability.name == 'Steel Card' and next(find_joker("Alchemist"))) then
'''
match_indent = false

# For Buy in Bulk
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if (self.ability.set == 'Planet' or (self.ability.set == 'Booster' and self.ability.name:find('Celestial'))) and #find_joker('Astronomer') > 0 then self.cost = 0 end
'''
position = "after"
payload = '''
if self.ability.set == 'Booster' and next(find_joker("Buy in Bulk")) then self.cost = self.cost - 2 end
'''
match_indent = false
