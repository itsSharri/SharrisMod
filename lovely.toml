
[manifest]
version = "0.0.0"
dump_lua = true
priority = 0







# Calculate when Wheel fails (for Three-Leaf Clover) (stolen from Cryptid)
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
G.E_MANAGER:add_event(Event({trigger = 'after', delay = 0.4, func = function()
    attention_text({
        text = localize('k_nope_ex'),
        scale = 1.3, 
        hold = 1.4,
        major = used_tarot,
        backdrop_colour = G.C.SECONDARY_SET.Tarot,
        align = (G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK) and 'tm' or 'cm',
        offset = {x = 0, y = (G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK) and -0.2 or 0},
        silent = true
        })
        G.E_MANAGER:add_event(Event({trigger = 'after', delay = 0.06*G.SETTINGS.GAMESPEED, blockable = false, blocking = false, func = function()
            play_sound('tarot2', 0.76, 0.4);return true end}))
        play_sound('tarot2', 1, 0.4)
        used_tarot:juice_up(0.3, 0.5)
return true end }))
'''
position = "after"
payload = '''
self.sha_wheel_nope = true
'''
match_indent = false

# For Feste to detect when a Lucky card hits and copy that exact outcome
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if pseudorandom('lucky_mult') < G.GAME.probabilities.normal/5 then"
position = "after"
payload = '''
self.sha_lucky_mult = true
'''
match_indent = false

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if pseudorandom('lucky_money') < G.GAME.probabilities.normal/15 then"
position = "after"
payload = '''
self.sha_lucky_money = true
'''
match_indent = false

# For Steel Joker to also count Gold Cards if Alchemist is present
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
for k, v in pairs(G.playing_cards) do
    if v.config.center == G.P_CENTERS.m_steel then self.ability.steel_tally = self.ability.steel_tally+1 end
end
'''
position = "at"
payload = '''
if next(find_joker("Alchemist")) then
    for k, v in pairs(G.playing_cards) do
        if v.config.center == G.P_CENTERS.m_steel or v.config.center == G.P_CENTERS.m_gold then self.ability.steel_tally = self.ability.steel_tally+1 end
    end
else
    for k, v in pairs(G.playing_cards) do
        if v.config.center == G.P_CENTERS.m_steel then self.ability.steel_tally = self.ability.steel_tally+1 end
    end
end
'''
match_indent = false

# For Golden Ticket to also count Steel Cards if Alchemist is present
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
context.other_card.ability.name == 'Gold Card' then
'''
position = "at"
payload = '''
context.other_card.ability.name == 'Gold Card' or (context.other_card.ability.name == 'Steel Card' and next(find_joker("Alchemist"))) then
'''
match_indent = false

# For Buy in Bulk
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if (self.ability.set == 'Planet' or (self.ability.set == 'Booster' and self.ability.name:find('Celestial'))) and #find_joker('Astronomer') > 0 then self.cost = 0 end
'''
position = "after"
payload = '''
if self.ability.set == 'Booster' and next(find_joker("Buy in Bulk")) then self.cost = self.cost - 2 end
'''
match_indent = false